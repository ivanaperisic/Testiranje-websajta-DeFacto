// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.jupiter.api.Assertions.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;
public class TotalPriceTudorsTest {
private WebDriver driver;
private String
exePath =
"C:\\Users\\Darko\\Desktop\\Testiranje softvera seminarski\\chromedriver.exe";
private Map<String, Object> vars;
JavascriptExecutor js;
@Before
public void setUp() {
	
	  System.setProperty("webdriver.chrome.driver", exePath);
	    driver = new ChromeDriver();
	    js = (JavascriptExecutor) driver;
	    vars = new HashMap<String, Object>();
	    js.executeScript("window.focus();");
}
@After
public void tearDown() {
 driver.quit();
}
@Test
public void cartTudors() {
  double suma = 0;
 driver.manage().window().setSize(new Dimension(1280, 672));
 driver.get("https://tudors.rs/products.php?CategoryID=4&PriceRange=200.00:999.00");
 driver.findElements(By.className("acceptcookies")).get(0).click();
 driver.findElements(By.className("product-title")).get(0).click();
 String cena = driver.findElements(By.className("product-price")).get(0).getText();
 cena.replaceAll("\\s+","");
 cena = cena.substring(0, cena.length()-4);
 if (cena.contains("."))
	 cena = cena.replace(".", "");
 cena = cena.replace(',', '.');
 cena = cena.substring(0, cena.length() - 3);
 suma+= (Double.parseDouble(cena) - (Double.parseDouble(cena) *0.3)) ;
 System.out.println(cena);
 System.out.println(suma);
 driver.findElements(By.className("select-size")).get(0).click();
 driver.findElement(By.cssSelector(".btn > span")).click();
 driver.get("https://tudors.rs/products.php?CategoryID=2&Sleeve[]=Dugi%20Rukavi&Buttoning[]=Bez%20Raskop%C4%8Davanja");
 try {
	Thread.sleep(1000);
} catch (InterruptedException e) {
	// TODO Auto-generated catch block
	e.printStackTrace();
}
driver.findElements(By.className("product-title")).get(2).click();
 cena = driver.findElements(By.className("product-price")).get(0).getText();
cena.replaceAll("\\s+","");
cena = cena.substring(0, cena.length()-4);
if (cena.contains("."))
 cena = cena.replace(".", "");
cena = cena.replace(',', '.');
cena = cena.substring(0, cena.length() - 3);
suma+= (Double.parseDouble(cena)- (Double.parseDouble(cena) *0.2)) ;
System.out.println(cena);
System.out.println(suma);
 driver.findElements(By.className("select-size")).get(0).click();
 driver.findElement(By.cssSelector(".btn > span")).click();
 driver.get("https://tudors.rs/kosulje/slim-fit/sa-linijama/");
 try {
	Thread.sleep(1000);
} catch (InterruptedException e) {
	// TODO Auto-generated catch block
	e.printStackTrace();
}
 driver.findElements(By.className("product-title")).get(4).click();
  cena = driver.findElements(By.className("product-price")).get(0).getText();
  cena.replaceAll("\\s+","");
  cena = cena.substring(0, cena.length()-4);
  if (cena.contains("."))
   cena = cena.replace(".", "");
  cena = cena.replace(',', '.');
  cena = cena.substring(0, cena.length() - 3);
  suma+= (Double.parseDouble(cena)- (Double.parseDouble(cena) *0.1)) ;
  System.out.println(cena);
  System.out.println(suma);
 driver.findElements(By.className("select-size")).get(0).click();
 driver.findElement(By.cssSelector(".btn > span")).click();
 driver.get("https://tudors.rs/cart.php");
 try {
	Thread.sleep(2500);
} catch (InterruptedException e) {
	// TODO Auto-generated catch block
	e.printStackTrace();
}
 String actualPrice = driver.findElements(By.cssSelector(".table-totals > tbody > tr > td")).get(5).getText();
 actualPrice.replaceAll("\\s+","");
 actualPrice = actualPrice.substring(0, actualPrice.length()-4);
 if (actualPrice.contains("."))
	 actualPrice = actualPrice.replace(".", "");
 actualPrice = actualPrice.replace(',', '.');
 actualPrice = actualPrice.substring(0, actualPrice.length() - 3);
 assertEquals((int)suma, Double.parseDouble(actualPrice));
 
}

}
